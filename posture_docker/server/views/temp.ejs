<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
        <meta name="description" content="" />
        <meta name="author" content="" />
        <title>Modern Business - Start Bootstrap Template</title>
        <!-- Favicon-->
        <link rel="icon" type="image/x-icon" href="assets/favicon.ico" />
        <!-- Custom Google font-->
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
        <link href="https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@100;200;300;400;500;600;700;800;900&amp;display=swap" rel="stylesheet" />
        <!-- Bootstrap icons-->
        <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css" rel="stylesheet" />
        <!-- Core theme CSS (includes Bootstrap)-->
        <link href="css/styles.css" rel="stylesheet" />
    </head>
    <body class="d-flex flex-column h-100 bg-light">
        <main class="flex-shrink-0">
            <!-- Navigation-->
            
            <!-- Projects Section-->
            <section class="py-5">
                <div class="container px-5 mb-5">
                    <div class="text-center mb-5">
                        <h1 class="display-5 fw-bolder mb-0"><span class="text-gradient d-inline">Projects</span></h1>
                    </div>
                    <div class="row gx-5 justify-content-center">
                        <div class="col-lg-11 col-xl-9 col-xxl-8">
                            <!-- Project Card 1-->
                            <div class="card overflow-hidden shadow rounded-4 border-0 mb-5">
                                <div class="card-body p-0">
                                    <div class="d-flex align-items-center">
                                        
                                        
                                        <button type="button" onclick="shutdown()">닥쳐</button>
                                        <script>
                                            
                                            if (flag == 1) {
                                                <button type="button" onclick="shutdown()">다시 소리</button>
                                            } 
                                        </script>
                                    
                                    
                                    
                                        <div id="webcam-container"></div>
                                        <div id="label-container"></div>
                                        <script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@latest/dist/tf.min.js"></script>
                                        <script
                                            src="https://cdn.jsdelivr.net/npm/@teachablemachine/image@latest/dist/teachablemachine-image.min.js"></script>
                                    
                                    
                                        <script type="text/javascript">
                                            var flag = 0;
                                    
                                    
                                            // More API functions here:
                                            // https://github.com/googlecreativelab/teachablemachine-community/tree/master/libraries/image
                                    
                                            // the link to your model provided by Teachable Machine export panel
                                            const URL = "https://teachablemachine.withgoogle.com/models/hdpukdrm4/";
                                    
                                            let model, webcam, labelContainer, maxPredictions;
                                    
                                    
                                            // Load the image model and setup the webcam
                                            async function init() {
                                                const modelURL = URL + "model.json";
                                                const metadataURL = URL + "metadata.json";
                                    
                                                // load the model and metadata
                                                // Refer to tmImage.loadFromFiles() in the API to support files from a file picker
                                                // or files from your local hard drive
                                                // Note: the pose library adds "tmImage" object to your window (window.tmImage)
                                                model = await tmImage.load(modelURL, metadataURL);
                                                maxPredictions = model.getTotalClasses();
                                    
                                                // Convenience function to setup a webcam
                                                const flip = true; // whether to flip the webcam
                                                webcam = new tmImage.Webcam(200, 200, flip); // width, height, flip
                                                await webcam.setup(); // request access to the webcam
                                                await webcam.play();
                                    
                                                window.requestAnimationFrame(loop);
                                    
                                                // append elements to the DOM
                                                document.getElementById("webcam-container").appendChild(webcam.canvas);
                                                labelContainer = document.getElementById("label-container");
                                                for (let i = 0; i < maxPredictions; i++) { // and class labels
                                                    labelContainer.appendChild(document.createElement("div"));
                                                }
                                            }
                                    
                                            async function loop() {
                                                webcam.update(); // update the webcam frame
                                                await predict();
                                                window.requestAnimationFrame(loop);
                                                if (flag == 1) {
                                                    audio.pause();
                                                    audio.currentTime = 0; //소리파일 처음부터 되게 초기화
                                                }
                                    
                                            }
                                    
                                    
                                    
                                            turtlecnt = 0;
                                            var audio = new Audio('warning2.m4a');
                                            // run the webcam image through the image model
                                            async function predict() {
                                                // predict can take in an image, video or canvas html element
                                                const prediction = await model.predict(webcam.canvas);
                                                for (let i = 0; i < maxPredictions; i++) {
                                                    const classPrediction =
                                                        prediction[i].className + ": " + prediction[i].probability.toFixed(2);
                                                    labelContainer.childNodes[i].innerHTML = classPrediction;
                                                    if (prediction[i].className == "turtle" && prediction[i].probability > 0.5) {
                                                        turtlecnt++;
                                                    }
                                                }
                                                if (turtlecnt >= 120) {
                                                    console.log('audio start'); //F12
                                                    turtlecnt = 0;
                                    
                                                    audio.play();
                                                }
                                            }
                                    
                                            async function shutdown() {
                                                if (flag == 0) {
                                                    flag = 1;
                                                }
                                                else {
                                                    flag = 0;
                                                }
                                            }
                                    
                                            init();
                                    
                                        </script>
                                        <div class="p-5">
                                            <h2 class="fw-bolder">Project Name 1</h2>
                                            <p>! Ipsam!</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- Project Card 2-->
                          
                        </div>
                    </div>
                </div>
            </section>
            <!-- Call to action section-->
           
        </main>
        <!-- Footer-->
        <footer class="bg-white py-4 mt-auto">
            <div class="container px-5">
                <div class="row align-items-center justify-content-between flex-column flex-sm-row">
                    <div class="col-auto"><div class="small m-0">Copyright &copy; Your Website 2023</div></div>
                    <div class="col-auto">
                        <a class="small" href="#!">Privacy</a>
                        <span class="mx-1">&middot;</span>
                        <a class="small" href="#!">Terms</a>
                        <span class="mx-1">&middot;</span>
                        <a class="small" href="#!">Contact</a>
                    </div>
                </div>
            </div>
        </footer>
        <!-- Bootstrap core JS-->
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
        <!-- Core theme JS-->
        <script src="js/scripts.js"></script>
    </body>
</html>
