<header>
    <%- include('./header') %>
</header>
<main>

    <div class="container">  
        <input type="file" id="input_image" accept="image/*" onchange="loadImage(this)">
        <br>
        <img id="preview" width="640"/>
        <br><br>
        <button type="button" class="btn btn-primary" id="pred_button" onclick="predict()">예측</button>
        <div id="prediction"></div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@latest"> </script>
    
<script>

let model;
async function app() {
    model = await tf.loadLayersModel('https://raw.githubusercontent.com/neukkim/AiPosture/main/tfjs/model.json');
}
//이미지 업로드
function loadImage(input) {
    if (input.files && input.files[0]) {
        let reader = new FileReader();
        reader.onload = function(e) {
            document.getElementById('preview').src = e.target.result;       
 //           console.log(e.target.result)
        };       
        reader.readAsDataURL( input.files[0] );
    } 
};
    //예측
async function predict() {
    let image = document.getElementById("preview");
    console.log(image)
            // 이미지 픽셀값을 텐서로 변환
    image = tf.browser.fromPixels(image);
            // 이미지 사이즈 조절, div(255) : 0-1 사이의 값으로 정규화

    console.log(image)

    image = tf.image.resizeBilinear(image, [224,224]).div(255);
    console.log(image)
            // 차원 확대(shape 변경, axis=0), (224, 244)를 (1, 224, 224)로 변환
    image = tf.expandDims(image, 0)
            // arraySync() : 텐서를 배열로 변환하여 반환
            
    pred = model.predict(image).arraySync();
            // topk : top K 반환(예측 결과 중 가장 정확도가 높은 3개의 확률과 인덱스 반환)
    const { values, indices } = tf.topk(pred, 4);
    const index = indices.arraySync()[0];
    const probability = values.arraySync()[0];
 //   console.log(index, probability);
    
    let html = '';
    for (let i=0; i<index.length; i++) {
        html += `${imagenetLabels[index[i]]} : ${probability[i]}<br>`;
    }
    document.getElementById('prediction').innerHTML = html;

}
    app();

    imagenetLabels = [
        "chin",
        "normal",
        "noshow",
        "turtle",
    ];

</script>
</main>